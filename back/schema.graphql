# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddProjectInput {
  content: String!
  coverImg: String!
  description: String!
  endDate: DateTime
  githubUrl: String!
  startDate: DateTime!
  title: String!
}

type CoreRes {
  error: String
  ok: Boolean!
}

input CreatePostInput {
  content: String!
  coverImg: String!
  tags: [String!]!
  title: String!
}

type CreateTagDTO {
  error: String
  ok: Boolean!
  tag: Tag!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input EditPostInput {
  _id: String!
  addTags: [String!]!
  content: String!
  coverImg: String!
  deleteTags: [String!]!
  title: String!
}

input EditProjectInput {
  _id: String!
  content: String!
  coverImg: String!
  description: String!
  endDate: DateTime
  githubUrl: String!
  startDate: DateTime!
  title: String!
}

type GetPostDTO {
  error: String
  ok: Boolean!
  post: Post!
  siblingPost: SiblingPost!
}

input GetPostInput {
  id: String!
}

input GetPostsByTagInput {
  lastId: String
  tagName: String
}

type GetPostsDTO {
  error: String
  ok: Boolean!
  posts: [Post!]!
}

input GetPostsInput {
  lastId: String
}

type GetProjectDto {
  error: String
  ok: Boolean!
  project: Project!
}

type GetProjectsDto {
  error: String
  ok: Boolean!
  projects: [Project!]!
}

type GetTagsRes {
  error: String
  ok: Boolean!
  tags: [Tag!]!
}

type GetUserInfoDTO {
  error: String
  ok: Boolean!
  username: String!
}

input InputUser {
  """User Password"""
  password: String!

  """User ID"""
  userId: String!

  """User Name"""
  username: String!
}

type Mutation {
  addPost(input: CreatePostInput!): CoreRes!
  addProject(input: AddProjectInput!): CoreRes!
  create(input: InputUser!): CoreRes!
  createTag(input: String!): CreateTagDTO!
  deletePost(input: GetPostInput!): CoreRes!
  deleteProject(input: ProjectInput!): CoreRes!
  deleteTag(_id: String!): CoreRes!
  editPost(input: EditPostInput!): CoreRes!
  editProject(input: EditProjectInput!): CoreRes!
  refresh: CoreRes!
  signin(input: SigninInput!): SigninRes!
  signout: CoreRes!
}

type Post {
  _id: String!
  content: String!
  coverImg: String!
  createdAt: DateTime!
  tags: [Tag!]!
  title: String!
  updatedAt: DateTime!
}

type Project {
  _id: String!
  content: String!
  coverImg: String!
  createdAt: DateTime!
  description: String!
  endDate: DateTime
  githubUrl: String!
  startDate: DateTime!
  title: String!
  updatedAt: DateTime!
}

input ProjectInput {
  _id: String!
}

type Query {
  getPost(input: GetPostInput!): GetPostDTO!
  getPosts(input: GetPostsInput): GetPostsDTO!
  getPostsByTag(input: GetPostsByTagInput): GetPostsDTO!
  getProject(input: ProjectInput!): GetProjectDto!
  getProjects: GetProjectsDto!
  getTag(input: String!): CoreRes!
  getTags: GetTagsRes!
  getUserInfo: GetUserInfoDTO!
  searchPosts(input: SearchPostsInput!): GetPostsDTO!
  searchTags(input: SearchTagsInput!): SearchTagsDTO!
}

input SearchPostsInput {
  lastId: String
  text: String!
}

type SearchTagsDTO {
  error: String
  ok: Boolean!
  tags: [Tag!]!
}

input SearchTagsInput {
  text: String!
}

type SiblingPost {
  next: Post
  prev: Post
}

input SigninInput {
  """User Password"""
  password: String!

  """User ID"""
  userId: String!
}

type SigninRes {
  error: String
  ok: Boolean!
  username: String!
}

type Tag {
  _id: String!
  name: String!
  posts: [Post!]!
}