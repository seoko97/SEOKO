name: SEOKO Client Deploy

on:
   push:
      paths:
         - 'front/**'
         - '.github/workflows/deploy-front.yml'
      branches: ['main']

jobs:
   build-frontend:
      name: Build and Push Frontend Project
      runs-on: ubuntu-latest
      env:
         working-directory: ./front
      steps:
         - name: Checkout
           uses: actions/checkout@v3

         - name: Setup Node.js environment
           uses: actions/setup-node@v3.5.1
           with:
              node-version: 16

         - name: Install the project dependencies
           run: npm install
           working-directory: ${{ env.working-directory }}

         - name: Create .env file
           run: |
              echo "HOST=$HOST" >> .env
              echo "API_URL=$API_URL" >> .env
           env:
              HOST: ${{secrets.HOST}}
              API_URL: ${{secrets.API_URL}}
           working-directory: ${{ env.working-directory }}

         - name: Login to Docker Registry
           uses: docker/login-action@v2
           with:
              registry: ${{secrets.FRONT_DOCKER_REGISTRY_URL}}
              username: ${{secrets.DOCKER_REGISTRY_ACCESS_KEY}}
              password: ${{secrets.DOCKER_REGISTRY_SECRET_KEY}}

         - name: Docker build & push to push
           run: docker buildx build -t ${{secrets.FRONT_DOCKER_REGISTRY_URL}}/${{secrets.FRONT_DOCKER_IMAGE_NAME}}:${{ github.sha }} -t ${{secrets.FRONT_DOCKER_REGISTRY_URL}}/${{secrets.FRONT_DOCKER_IMAGE_NAME}}:latest --push .
           working-directory: ${{ env.working-directory }}

   deploy:
      needs: build-frontend
      name: Deploy
      runs-on: [seoko]
      steps:
         - name: Login to Docker Registry
           uses: docker/login-action@v2
           with:
              registry: ${{secrets.FRONT_DOCKER_REGISTRY_URL}}
              username: ${{secrets.DOCKER_REGISTRY_ACCESS_KEY}}
              password: ${{secrets.DOCKER_REGISTRY_SECRET_KEY}}

         - name: Docker run
           run: |
              if [ `docker ps -f "name=front" -q` ]
              then
                  docker rm -f $(docker ps -f "name=front" -q)
              fi
              docker pull ${{secrets.FRONT_DOCKER_REGISTRY_URL}}/${{secrets.FRONT_DOCKER_IMAGE_NAME}}:${{ github.sha }}
              docker run -dit -p 3000:3000 --name front ${{secrets.FRONT_DOCKER_REGISTRY_URL}}/${{secrets.FRONT_DOCKER_IMAGE_NAME}}:${{ github.sha }}
