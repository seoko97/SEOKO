name: SEOKO Server Deploy

on:
   push:
      paths:
         - 'back/**'
         - '.github/workflows/deploy-back.yml'
      branches: ['main']

jobs:
   build-backend:
      name: Build and Push Backend Project
      runs-on: ubuntu-latest
      env:
         working-directory: ./back
      steps:
         - name: Checkout
           uses: actions/checkout@v3

         - name: Setup Node.js environment
           uses: actions/setup-node@v3.5.1
           with:
              node-version: 16

         - name: Install the project dependencies
           run: npm install
           working-directory: ${{ env.working-directory }}

         - name: Create .env file
           run: |
              echo "HOST=$HOST" >> .env
              echo "DB_URI=$DB_URI" >> .env
              echo "DB_NAME=$DB_NAME" >> .env
              echo "DB_USERNAME=$DB_USERNAME" >> .env
              echo "DB_PASSWORD=$DB_PASSWORD" >> .env
              echo "JWT_SECRET_KEY=$JWT_SECRET_KEY" >> .env
              echo "JWT_HEADER=$JWT_HEADER" >> .env
              echo "SIGNIN_SECRET_KEY=$SIGNIN_SECRET_KEY" >> .env
              echo "IMAGE_UPLOAD_SECRET_KEY=$IMAGE_UPLOAD_SECRET_KEY" >> .env
              echo "IMAGE_UPLOAD_URL=$IMAGE_UPLOAD_URL" >> .env
              echo "IMAGE_APP_KEY=$IMAGE_APP_KEY" >> .env
           env:
              HOST: ${{secrets.HOST}}
              DB_URI: ${{secrets.DB_URI}}
              DB_NAME: ${{secrets.DB_NAME}}
              DB_USERNAME: ${{secrets.DB_USERNAME}}
              DB_PASSWORD: ${{secrets.DB_PASSWORD}}
              JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
              JWT_HEADER: ${{secrets.JWT_HEADER}}
              SIGNIN_SECRET_KEY: ${{secrets.SIGNIN_SECRET_KEY}}
              IMAGE_UPLOAD_SECRET_KEY: ${{secrets.IMAGE_UPLOAD_SECRET_KEY}}
              IMAGE_UPLOAD_URL: ${{secrets.IMAGE_UPLOAD_URL}}
              IMAGE_APP_KEY: ${{secrets.IMAGE_APP_KEY}}
           working-directory: ${{ env.working-directory }}

         - name: Login to Docker Registry
           uses: docker/login-action@v2
           with:
              registry: ${{secrets.BACK_DOCKER_REGISTRY_URL}}
              username: ${{secrets.DOCKER_REGISTRY_ACCESS_KEY}}
              password: ${{secrets.DOCKER_REGISTRY_SECRET_KEY}}

         - name: Docker build & push to push
           run: docker buildx build -t ${{secrets.BACK_DOCKER_REGISTRY_URL}}/${{secrets.BACK_DOCKER_IMAGE_NAME}}:${{ github.sha }} -t ${{secrets.BACK_DOCKER_REGISTRY_URL}}/${{secrets.BACK_DOCKER_IMAGE_NAME}}:latest --push .
           working-directory: ${{ env.working-directory }}

   deploy:
      needs: build-backend
      name: Deploy
      runs-on: [seoko]
      steps:
         - name: Login to Docker Registry
           uses: docker/login-action@v2
           with:
              registry: ${{secrets.BACK_DOCKER_REGISTRY_URL}}
              username: ${{secrets.DOCKER_REGISTRY_ACCESS_KEY}}
              password: ${{secrets.DOCKER_REGISTRY_SECRET_KEY}}

         - name: Docker run
           run: |
              if [ `docker ps -f "name=back" -q` ]
              then
                  docker rm -f $(docker ps -f "name=back" -q)
              fi
              docker pull ${{secrets.BACK_DOCKER_REGISTRY_URL}}/${{secrets.BACK_DOCKER_IMAGE_NAME}}:${{ github.sha }}
              docker run -dit -p 3065:3065 --name back ${{secrets.BACK_DOCKER_REGISTRY_URL}}/${{secrets.BACK_DOCKER_IMAGE_NAME}}:${{ github.sha }}
